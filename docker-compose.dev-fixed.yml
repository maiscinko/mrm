# =====================================================
# MRM - DEV MODE HOT RELOAD (FIXED VERSION)
# CTO Pattern: Named volumes + persistent node_modules
# =====================================================
version: '3.8'

services:
  mrm-dev:
    image: node:18-alpine
    container_name: mrm-dev-hotreload
    working_dir: /app

    # âš“ ANCHOR: VOLUME STRATEGY
    # RAZÃƒO: Volume anÃ´nimo /app/node_modules causa VAZIO
    # SOLUÃ‡ÃƒO: Named volume persistente + bind mount cÃ³digo
    volumes:
      # Source code (hot reload)
      - ./:/app

      # âš“ CRITICAL: Named volume (nÃ£o anonymous!)
      # Persiste node_modules entre restarts
      - mrm_dev_node_modules:/app/node_modules

      # âš“ Next.js build cache (acelera rebuild quando necessÃ¡rio)
      - mrm_dev_nextcache:/app/.next

    # âš“ ANCHOR: NO TRAEFIK (dev local simples)
    # RAZÃƒO: Dev nÃ£o precisa SSL, evita conflito prod
    ports:
      - "3456:3000"  # Porta diferente prod

    env_file:
      - .env

    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_APP_URL=http://localhost:3456

      # âš“ ANCHOR: POLLING TUNING
      # RAZÃƒO: Docker Mac/Windows nÃ£o detecta file changes nativamente
      # SOLUÃ‡ÃƒO: Polling otimizado (300ms = sweet spot performance/responsiveness)
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - CHOKIDAR_INTERVAL=300

      # âš“ Disable telemetry (dev mais rÃ¡pido)
      - NEXT_TELEMETRY_DISABLED=1

    # âš“ ANCHOR: ENTRYPOINT STRATEGY
    # RAZÃƒO: npm install a cada restart = LENTO
    # SOLUÃ‡ÃƒO: Verificar se node_modules existe antes instalar
    command: >
      sh -c "
        if [ ! -d 'node_modules/@next' ]; then
          echo 'ðŸ”§ Installing dependencies (first run)...';
          npm install;
        else
          echo 'âœ… Dependencies already installed, skipping...';
        fi &&
        echo 'ðŸš€ Starting Next.js dev server with hot reload...' &&
        npm run dev
      "

    # âš“ ANCHOR: HEALTH CHECK
    # RAZÃƒO: Saber quando dev server estÃ¡ pronto
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

# âš“ ANCHOR: NAMED VOLUMES (persiste entre restarts)
volumes:
  mrm_dev_node_modules:
    driver: local
  mrm_dev_nextcache:
    driver: local
